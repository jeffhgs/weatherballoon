task wrapper(type: Wrapper) {
    gradleVersion = '4.10.2'
}

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:2.0.4'
    }
}

repositories {
    mavenCentral()
}

apply plugin: 'scala'
apply plugin:'application'
apply plugin: 'com.github.johnrengelman.shadow'

dependencies {
    compile 'org.scala-lang:scala-library:2.11.8'
    zinc 'com.typesafe.zinc:zinc:0.3.9'

    //compile 'com.decodified:scala-ssh_2.11:0.9.0'
    compile 'com.jcraft:jsch:0.1.55'

    compile 'com.amazonaws:aws-java-sdk-ec2:1.11.496'

    compile 'org.json4s:json4s-jackson_2.11:3.6.4'

    testCompile 'org.scalatest:scalatest_2.11:3.0.5'
    testCompile 'junit:junit:4.12'

    compile 'net.logstash.logback:logstash-logback-encoder:5.2'
    compile 'ch.qos.logback:logback-classic:1.2.3'
}

task(run1, type: JavaExec) {
    main = 'com.groovescale.weatherballoon.Run1'
    classpath = sourceSets.main.runtimeClasspath
}

task(run2, type: JavaExec) {
    main = 'com.groovescale.weatherballoon.Run1'
    args = ["bash", "./gradlew", "jar"]
    classpath = sourceSets.main.runtimeClasspath
}

task(runJce, type: JavaExec) {
    main = 'com.groovescale.weatherballoon.RunJce'
    classpath = sourceSets.main.runtimeClasspath
}

task copyDependencies(type: Copy) {
    from configurations.compile
    into "$project.rootDir/reports/libs/"
}

test {
    //useJUnit()
    testLogging {
        // Show that tests are run in the command-line output
        events 'started', 'passed'
    }
}

shadowJar {
    mainClassName = 'com.groovescale.weatherballoon.Run1'
    baseName = 'weatherballoon_shadow'
    classifier = null
    version = null
}
shadowJar.dependsOn 'copyDependencies'
